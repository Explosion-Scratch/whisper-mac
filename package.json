{
  "name": "whispermac",
  "version": "1.0.0",
  "description": "AI-powered dictation for Mac using multiple transcription engines",
  "author": "Explosion Scratch",
  "main": "dist/main.js",
  "scripts": {
    "fullclean": "rm -rf dist .crush *.log vendor release build && bun install",
    "clear:userdata": "rm -rf \"$HOME/Library/Application Support/WhisperMac\" \"$HOME/Library/Application Support/Electron\" \"$HOME/Library/Application Support/whispermac\" \"$HOME/Library/Application Support/electron\" .whispermac-data",
    "build": "tsc && node scripts/copy-assets.js && node scripts/prep-vad-assets.js",
    "killothers": "pkill -f Electron || true && pkill -f electron || true && pkill -f whisper || true && pkill -f WhisperMac || true",
    "start": "bun run killothers && electron dist/main.js",
    "dev": "nodemon --exec \"bun run single-dev\" --ignore dist --ignore photon --ignore .crush",
    "single-dev": "concurrently --raw -m 1 \"rm -rf dist\"  \"bun run killothers\" \"bun run build\" \"bun run start\" --names \"cleanup, kill port, build, dev\"",
    "pack": "electron-builder",
    "dist": "electron-builder --publish=never",
    "setup:plugins": "node scripts/setup-plugins.js",
    "prep": "bun run setup:plugins && node scripts/prep-vad-assets.js && bun scripts/download-photon.js && node scripts/build-get-selection.js && bun run build:native",
    "build:native": "cd native/mac-input && node-gyp rebuild",
    "postinstall": "bun run prep",
    "icons": "node scripts/generate-icons.js",
    "bundleid": "mdls -name kMDItemCFBundleIdentifier -r release/mac-arm64/WhisperMac.app",
    "removequarantine": "xattr -cr release/mac-arm64/WhisperMac.app",
    "resetperms": "tccutil reset All com.whispermac.app",
    "build:mac": "bun run build && electron-builder --mac --publish=never",
    "build:dev": "rm -rf /Applications/WhisperMac.app && bun run build:mac && bun run removequarantine && bun run resetperms && rs release/mac-arm64/WhisperMac.app /Applications && osascript -e 'tell application \"WhisperMac\" to activate' && tail -f ~/Library/Logs/whispermac/main.log",
    "pack:prod": "NODE_ENV=production bun install && electron-builder --dir"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/explosion-scratch/whisper-mac.git"
  },
  "dependencies": {
    "@ricky0123/vad-web": "^0.0.22",
    "copy-paste": "^2.2.0",
    "electron-log": "^5.4.3",
    "keytar": "^7.9.0",
    "uuid": "^9.0.0",
    "node-addon-api": "^7.1.0"
  },
  "devDependencies": {
    "sharp": "^0.34.3",
    "@types/copy-paste": "^2.1.0",
    "@types/node": "^24.2.1",
    "@types/uuid": "^9.0.0",
    "@types/ws": "^8.5.0",
    "concurrently": "^8.0.0",
    "electron": "^25.0.0",
    "electron-builder": "^24.0.0",
    "nodemon": "^3.0.0",
    "typescript": "^5.0.0"
  },
  "build": {
    "appId": "com.whispermac.app",
    "productName": "WhisperMac",
    "directories": {
      "output": "release"
    },
    "files": [
      "dist/**/*",
      "assets/**/*",
      "package.json"
    ],
    "asar": true,
    "compression": "maximum",
    "extraResources": [
      {
        "from": "vendor/yap",
        "to": "yap",
        "filter": [
          "**/*"
        ]
      },
      {
        "from": "vendor/whisper-cpp",
        "to": "whisper-cpp",
        "filter": [
          "whisper-cli"
        ]
      },
      {
        "from": "vendor/vosk",
        "to": "vosk",
        "filter": [
          "**/*"
        ]
      }
    ],
    "mac": {
      "category": "public.app-category.productivity",
      "target": "dir",
      "artifactName": "${productName}-${version}-mac-${arch}.${ext}",
      "icon": "build/icons/WhisperMac.icns",
      "identity": null
    },
    "win": {},
    "linux": {},
    "dmg": {
      "contents": [
        {
          "x": 130,
          "y": 220
        },
        {
          "x": 410,
          "y": 220,
          "type": "link",
          "path": "/Applications"
        }
      ]
    }
  }
}
